"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _path() {
  const data = _interopRequireDefault(require("path"));

  _path = function () {
    return data;
  };

  return data;
}

function _plugin() {
  const data = require("@parcel/plugin");

  _plugin = function () {
    return data;
  };

  return data;
}

function _utils() {
  const data = require("@parcel/utils");

  _utils = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const WRAPPER = _path().default.join(__dirname, 'helpers', 'helpers.js');

function shouldExclude(asset, options) {
  return !asset.isSource || !options.hmrOptions || !asset.env.isBrowser() || asset.env.isWorker() || asset.env.isWorklet() || options.mode !== 'development' || !asset.getDependencies().find(v => v.specifier === 'react');
}

var _default = new (_plugin().Transformer)({
  async transform({
    asset,
    options
  }) {
    if (shouldExclude(asset, options)) {
      return [asset];
    }

    let wrapperPath = (0, _utils().relativePath)(_path().default.dirname(asset.filePath), WRAPPER);

    if (!wrapperPath.startsWith('.')) {
      wrapperPath = './' + wrapperPath;
    }

    let code = await asset.getCode();
    let map = await asset.getMap();
    code = `var helpers = require(${JSON.stringify(wrapperPath)});
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
${code}
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}`;
    asset.setCode(code);

    if (map) {
      map.offsetLines(1, 6);
      asset.setMap(map);
    } // The JSTransformer has already run, do it manually


    asset.addDependency({
      specifier: wrapperPath,
      specifierType: 'esm'
    });
    return [asset];
  }

});

exports.default = _default;