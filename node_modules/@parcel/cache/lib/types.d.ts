import type { Readable } from "stream";
export interface Cache {
  readonly ensure?: () => Promise<void>;
  has(key: string): Promise<boolean>;
  get<T>(key: string): Promise<T | null | undefined>;
  set(key: string, value: unknown): Promise<void>;
  getStream(key: string): Readable;
  setStream(key: string, stream: Readable): Promise<void>;
  getBlob(key: string): Promise<Buffer>;
  setBlob(key: string, contents: Buffer | string): Promise<void>;
  getBuffer(key: string): Promise<Buffer | null | undefined>;
}
